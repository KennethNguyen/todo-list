{"version":3,"sources":["components/TodoItem.js","components/TodoForm.js","App.js","index.js"],"names":["TodoItem","props","className","type","checked","task","completed","onChange","handleChange","id","style","fontStyle","color","textDecoration","text","onClick","removeTodo","TodoForm","initialState","state","bind","submitForm","event","target","name","value","this","setState","handleSubmit","placeholder","React","Component","App","todos","prevState","map","todo","console","log","filter","todoComponent","key","ReactDOM","render","document","getElementById"],"mappings":"mRAsBeA,EApBE,SAAAC,GAOb,OACI,yBAAKC,UAAU,aACX,2BACIC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACpBC,SAAU,kBAAMN,EAAMO,aAAaP,EAAMI,KAAKI,OAElD,uBAAGC,MAAOT,EAAMI,KAAKC,UAbN,CACnBK,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAUsC,MAAOZ,EAAMI,KAAKS,MACpE,4BAAQZ,UAAU,eAAea,QAAS,kBAAMd,EAAMe,WAAWf,EAAMI,KAAKI,MAA5E,Y,OCyCGQ,E,YAvDX,aAAe,IAAD,8BACV,+CAEKC,aAAe,CAChBT,GAAI,EACJK,KAAM,GACNR,WAAW,GAGf,EAAKa,MAAQ,EAAKD,aAElB,EAAKV,aAAe,EAAKA,aAAaY,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAZR,E,0EAeDE,GAAQ,IAAD,EACMA,EAAMC,OAArBC,EADS,EACTA,KAAMC,EADG,EACHA,MACbC,KAAKC,SAAL,eACKH,EAAOC,M,mCAMZC,KAAKC,SAAS,CACVlB,GAAIiB,KAAKP,MAAMV,GAAK,EACpBK,KAAMY,KAAKR,aAAaJ,KACxBR,UAAWoB,KAAKR,aAAaZ,YAEjCoB,KAAKzB,MAAM2B,aAAaF,KAAKP,S,+BAGvB,IACCL,EAAQY,KAAKP,MAAbL,KAEP,OACI,8BACI,0CACA,2BACIX,KAAK,OACLsB,MAAOX,EACPU,KAAK,OACLK,YAAY,qBACZtB,SAAUmB,KAAKlB,eAEnB,2BACIL,KAAK,SACLsB,MAAM,SACNV,QAASW,KAAKL,kB,GAjDXS,IAAMC,WC+EdC,E,YAlEX,aAAe,IAAD,8BACV,+CACKb,MAAQ,CACTc,MAAO,IAEX,EAAKzB,aAAe,EAAKA,aAAaY,KAAlB,gBACpB,EAAKQ,aAAe,EAAKA,aAAaR,KAAlB,gBACpB,EAAKJ,WAAa,EAAKA,WAAWI,KAAhB,gBAPR,E,0EAWDX,GACTiB,KAAKC,SAAS,SAAAO,GAOV,MAAO,CACHD,MAPiBC,EAAUD,MAAME,IAAI,SAAAC,GAIrC,OAHIA,EAAK3B,KAAOA,IACZ2B,EAAK9B,WAAa8B,EAAK9B,WAEpB8B,S,mCASNA,GACTV,KAAKC,SAAS,CACVM,MAAM,GAAD,mBAAMP,KAAKP,MAAMc,OAAjB,CAAwBG,Q,iCAI1B3B,GAAK,IACLwB,EAASP,KAAKP,MAAdc,MACPI,QAAQC,IAAR,sBAA2B7B,IAC3BiB,KAAKC,SAAS,CACVM,MAAOA,EAAMM,OAAO,SAACH,GACjB,OAAOA,EAAK3B,KAAOA,Q,+BAKrB,IAAD,OACC+B,EAAgBd,KAAKP,MAAMc,MAAME,IAAI,SAAAC,GAAI,OAC/C,kBAAC,EAAD,CACIK,IAAKL,EAAK3B,GACVJ,KAAM+B,EACN5B,aAAc,EAAKA,aACnBQ,WAAY,EAAKA,eAErB,OACI,yBAAKd,UAAU,WACX,yBAAKA,UAAU,aACX,yCACCsC,GAEL,6BACA,6BACA,yBAAKtC,UAAU,aACX,kBAAC,EAAD,CAAU0B,aAAcF,KAAKE,qB,GA5D/BE,IAAMC,W,MCTxBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c65d36d4.chunk.js","sourcesContent":["import React from 'react'\n\nconst TodoItem = props => {\n    const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#cdcdcd\",\n        textDecoration: \"line-through\"\n    }\n\n    return (\n        <div className=\"todo-item\">\n            <input \n                type=\"checkbox\" \n                checked={props.task.completed}\n                onChange={() => props.handleChange(props.task.id)}\n            />\n            <p style={props.task.completed ? completedStyle : null}>{props.task.text}</p>\n            <button className=\"deleteButton\" onClick={() => props.removeTodo(props.task.id)}>Delete</button>\n        </div>\n    )\n}\n\nexport default TodoItem","import React from 'react'\n\nclass TodoForm extends React.Component {\n    constructor() {\n        super()\n        \n        this.initialState = {\n            id: 0,\n            text: \"\",\n            completed: false\n        }\n\n        this.state = this.initialState\n\n        this.handleChange = this.handleChange.bind(this)\n        this.submitForm = this.submitForm.bind(this)\n    }\n\n    handleChange(event) {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    \n    submitForm() {\n        this.setState({\n            id: this.state.id + 1,\n            text: this.initialState.text,\n            completed: this.initialState.completed\n        })\n        this.props.handleSubmit(this.state)\n    }\n\n    render() {\n        const {text} = this.state\n\n        return (\n            <form>\n                <h1>Add a todo</h1>\n                <input \n                    type=\"text\"\n                    value={text}\n                    name=\"text\"\n                    placeholder=\"Ex. Take out trash\"\n                    onChange={this.handleChange}\n                />\n                <input\n                    type=\"button\"\n                    value=\"Submit\"\n                    onClick={this.submitForm}\n                />               \n            </form>\n        )\n    }\n}\n\nexport default TodoForm","/* TODO: \n        Ideas: \n        -Bind enter key to input text/submit section\n        -Time stamp for form (!remindme) \n        -Local storage / Cloud storage\n        -Drag element API\n        -Sections for Completed and Not Completed\n        -Dark/Light mode onChange\n*/\n\nimport React from 'react'\nimport TodoItem from './components/TodoItem'\nimport TodoForm from './components/TodoForm'\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: []\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.removeTodo = this.removeTodo.bind(this)\n    }\n\n    // Updates checkbox state of each task\n    handleChange(id) {\n        this.setState(prevState => {\n            const updatedTodos = prevState.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed\n                }\n                return todo \n            })\n            return {\n                todos: updatedTodos\n            }\n        })\n    }\n    \n    // Adds a new task to todo-list on submit\n    handleSubmit(todo) {\n        this.setState({\n            todos: [...this.state.todos, todo]\n        })\n    }\n    \n    removeTodo(id) {\n        const {todos} = this.state\n        console.log(`Current ID: ${id}`)\n        this.setState({\n            todos: todos.filter((todo) => {\n                return todo.id !== id \n            })\n        })\n    }\n\n    render() {\n        const todoComponent = this.state.todos.map(todo => \n        <TodoItem \n            key={todo.id} \n            task={todo} \n            handleChange={this.handleChange} \n            removeTodo={this.removeTodo}\n        />)\n        return (\n            <div className=\"overall\">\n                <div className=\"todo-list\">\n                    <h1>Todo-List</h1>\n                    {todoComponent}\n                </div>\n                <br/>\n                <br />\n                <div className=\"todo-form\">\n                    <TodoForm handleSubmit={this.handleSubmit}/>\n                </div>\n            </div>\n        )    \n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}